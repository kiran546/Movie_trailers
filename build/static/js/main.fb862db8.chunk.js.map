{"version":3,"sources":["service/index.js","components/home/Home.jsx","components/moviedetail/MovieDetail.jsx","App.jsx","serviceWorker.js","index.js"],"names":["apiKey","url","nowPlayingUrl","movieUrl","genreUrl","moviesUrl","fetchMovies","a","axios","get","params","api_key","language","page","data","console","log","posterUrl","modifiedData","map","m","id","backPoster","popularity","title","poster","overview","rating","fetchGenre","g","name","fetchMovieByGenre","genre_id","with_genres","fetchMovieDetail","fetchMovieVideos","Home","useState","nowPlaying","setNowPlaying","genres","setGenres","movieByGenre","setMovieByGenre","useEffect","fetchAPI","handleGenreClick","movies","slice","item","index","style","height","width","key","className","src","alt","fontSize","color","textAlign","genreList","type","onClick","movieList","to","fontWeight","autoplay","pauseOnVisibility","slidesshowSpeed","version","indicators","borderTop","href","MovieDetail","match","isOpen","setIsOpen","detail","setDetail","video","setVideo","genresList","MoviePalyerModal","props","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Body","backgroundColor","playing","i","show","onHide","backdrop_path","cursor","count","vote_average","color1","release_date","runtime","budget","homepage","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fb862db8.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst apiKey = '4c37fdc542b76cf92059e9beb0afe8f2';\nconst url = 'https://api.themoviedb.org/3';\nconst nowPlayingUrl = `${url}/movie/now_playing`;\nconst topratedUrl = `${url}/movie/top_rated`;\nconst movieUrl = `${url}/movie`;\nconst genreUrl = `${url}/genre/movie/list`;\nconst moviesUrl = `${url}/discover/movie`;\nconst personUrl = `${url}/trending/person/week`;\nconst queryUrl    =`${url}/search/movie`;\n\n\n// https://api.themoviedb.org/3/search/movie?api_key=a4999a28333d1147dbac0d104526337a&query=Jack+Reacher\n\nexport const fetchQuery = async (querystring) => {\n    console.log(querystring,\"queryyyy\")\n    try {\n        const { data } = await axios.get(queryUrl, {\n            \n            params: {\n                api_key: apiKey,\n                query: querystring.trim().split(\" \").join(\"+\")\n               \n            }\n           \n        })\n\n        console.log(data['results'],\"data\")\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\n        const modifiedData = data['results'].map((m) => ({\n            id: m['id'],\n            backPoster: posterUrl + m['backdrop_path'],\n            popularity: m['popularith'],\n            title: m['title'],\n            poster: posterUrl + m['poster_path'],\n            overview: m['overview'],\n            rating: m['vote_average'],\n        }))\n\n        return modifiedData;\n    } catch (error) { }\n}\n\n\n\n\n\nexport const fetchMovies = async () => {\n    try {\n        const { data } = await axios.get(nowPlayingUrl, {\n            \n            params: {\n                api_key: apiKey,\n                language: 'en_US',\n                page: 1\n            }\n           \n        })\n        console.log(data,\"data\")\n        \n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\n        const modifiedData = data['results'].map((m) => ({\n            id: m['id'],\n            backPoster: posterUrl + m['backdrop_path'],\n            popularity: m['popularith'],\n            title: m['title'],\n            poster: posterUrl + m['poster_path'],\n            overview: m['overview'],\n            rating: m['vote_average'],\n        }))\n\n        return modifiedData;\n    } catch (error) { }\n}\n\nexport const fetchGenre = async () => {\n    try {\n        const { data } = await axios.get(genreUrl, {\n            params: {\n                api_key: apiKey,\n                language: 'en_US',\n                page: 1\n            }\n        })\n        const modifiedData = data['genres'].map((g) => ({\n            id: g['id'],\n            name: g['name']\n        }))\n        return modifiedData;\n    } catch (error) { }\n}\n\nexport const fetchMovieByGenre = async (genre_id) => {\n    try {\n        const { data } = await axios.get(moviesUrl, {\n            params: {\n                api_key: apiKey,\n                language: 'en_US',\n                page: 1,\n                with_genres: genre_id\n            }\n        })\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\n        const modifiedData = data['results'].map((m) => ({\n            id: m['id'],\n            backPoster: posterUrl + m['backdrop_path'],\n            popularity: m['popularith'],\n            title: m['title'],\n            poster: posterUrl + m['poster_path'],\n            overview: m['overview'],\n            rating: m['vote_average'],\n        }))\n\n        return modifiedData;\n    } catch (error) { }\n}\n\nexport const fetchPersons = async () => {\n    try {\n        const { data } = await axios.get(personUrl, {\n            params: {\n                api_key: apiKey\n            }\n        })\n        const modifiedData = data['results'].map((p) => ({\n            id: p['id'],\n            popularity: p['popularity'],\n            name: p['name'],\n            profileImg: 'https://image.tmdb.org/t/p/w200' + p['profile_path'],\n            known: p['known_for_department']\n        }))\n        return modifiedData;\n    } catch (error) { }\n}\n\nexport const fetchTopratedMovie = async () => {\n    try {\n        const { data } = await axios.get(topratedUrl, {\n            params: {\n                api_key: apiKey,\n                language: 'en_US',\n                page: 1\n            }\n        })\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\n        const modifiedData = data['results'].map((m) => ({\n            id: m['id'],\n            backPoster: posterUrl + m['backdrop_path'],\n            popularity: m['popularith'],\n            title: m['title'],\n            poster: posterUrl + m['poster_path'],\n            overview: m['overview'],\n            rating: m['vote_average'],\n        }))\n\n        return modifiedData;\n    } catch (error) {\n\n    }\n}\n\nexport const fetchMovieDetail = async (id) => {\n    try {\n        const { data } = await axios.get(`${movieUrl}/${id}`, {\n            params: {\n                api_key: apiKey,\n                language: 'en_US'\n            }\n        });\n        return data;\n    } catch (error) { }\n}\n\nexport const fetchMovieVideos = async (id) => {\n    try {\n        const { data } = await axios.get(`${movieUrl}/${id}/videos`, {\n            params: {\n                api_key: apiKey,\n            }\n        });\n        return data['results'][0];\n    } catch (error) { }\n}\n\n\n\n\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  fetchMovies,\n  fetchGenre,\n  fetchMovieByGenre,\n  \n} from \"../../service\";\nimport RBCarousel from \"react-bootstrap-carousel\";\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\nimport { Link } from \"react-router-dom\";\n\n\nexport function Home() {\n\n  const [nowPlaying, setNowPlaying] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [movieByGenre, setMovieByGenre] = useState([]);\n  \n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setNowPlaying(await fetchMovies());\n      setGenres(await fetchGenre());\n      setMovieByGenre(await fetchMovieByGenre(28));\n      \n      \n    };\n\n    fetchAPI();\n  }, []);\n\n  // const onSubmit = (submit) => {\n  // console.log(submit,\"iiiiiii\")\n  //   fetchQuery(submit.query)\n  // };\n\n  const handleGenreClick = async (genre_id) => {\n    setMovieByGenre(await fetchMovieByGenre(genre_id));\n  };\n  const movies = nowPlaying.slice(0, 5).map((item, index) => {\n    return (\n      <div style={{ height: 500, width: \"100%\" }} key={index}>\n        <div className=\"carousel-center\">\n          <img style={{ height: 600 }} src={item.backPoster} alt={item.title} />\n        </div>\n        <div className=\"carousel-center\">\n          <i\n            className=\"far fa-play-circle\"\n            style={{ fontSize: 95, color: \"#f4c10f\" }}\n          ></i>\n        </div>\n        <div\n          className=\"carousel-caption\"\n          style={{ textAlign: \"center\", fontSize: 35 }}\n        >\n          {item.title}\n        </div>\n      </div>\n    );\n  });\n\n  const genreList = genres.map((item, index) => {\n    return (\n      <li className=\"list-inline-item\" key={index}>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-info\"\n          onClick={() => {\n            handleGenreClick(item.id);\n          }}\n        >\n          {item.name}\n        </button>\n      </li>\n    );\n  });\n\n\n\n  const movieList = movieByGenre.slice(0, 8).map((item, index) => {\n    return (\n      <div className=\"col-md-3 col-sm-6\" key={index}>\n        <div className=\"card\">\n          <Link to={`/movie/${item.id}`}>\n            <img className=\"img-fluid\" src={item.poster} alt={item.title}></img>\n          </Link>\n        </div>\n        <div className=\"mt-3\">\n          <p style={{ fontWeight: \"bolder\" }}>{item.title}</p>\n          <p>Rated: {item.rating}</p>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-0\">\n        <div className=\"col\">\n          <RBCarousel\n            autoplay={true}\n            pauseOnVisibility={true}\n            slidesshowSpeed={5000}\n            version={4}\n            indicators={false}\n          >\n            {movies}\n          </RBCarousel>\n        </div>\n      </div>\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <div className=\"float-left\">\n           <h6>select your favourite Genere</h6>\n          </div>\n        </div>\n      </div>\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <ul className=\"list-inline\">{genreList}</ul>\n        </div>\n      </div>\n\n       {/* <form  onSubmit={handleSubmit(onSubmit)} >\n            <input\n            type=\"text\"\n            name=\"query\"\n            placeholder=\"Search your movie\"\n          />{\" \"}\n          <br />\n          <input type=\"submit\" value=\"submit\"/>\n        </form>  */}\n\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <div className=\"float-left\">\n           <h6>click on this cards to play movie tariler</h6>\n          </div>\n        </div>\n      </div>\n      <div className=\"row mt-3\">{movieList}</div>\n\n      \n      <hr className=\"mt-5\" style={{ borderTop: \"1px solid #5a606b\" }}></hr>\n\n      <div className=\"row mt-3 mb-5\">\n        <div className=\"col-md-8 col-sm-6\" style={{ color: \"#5a606b\" }}>\n        <h3>Contact us </h3>\n          <p>\n           This is our movie portal where you can stream your favourite movie tarilers tv shows based on your favourite category.\n          </p>\n          <p>\n          our social networks\n          </p>\n          <ul className=\"list-inline\">\n            <li className=\"list-inline-item\">\n              <a href=\"https://www.facebook.com/\" style={{ color: \"#f4c10f\" }}>\n                <i className=\"fab fa-facebook\"></i>\n              </a>\n            </li>\n            <li className=\"list-inline-item\">\n              <a href=\"https://www.youtube.com/\" style={{ color: \"#f4c10f\" }}>\n                <i className=\"fab fa-youtube\"></i>\n              </a>\n            </li>\n            <li className=\"list-inline-item\">\n              <a href=\"https://ads.twitter.com/onboarding/18ce55e50ru/welcome\" style={{ color: \"#f4c10f\" }}>\n                <i className=\"fab fa-twitter\"></i>\n              </a>\n            </li>\n            <li className=\"list-inline-item\">\n              <a href=\"https://www.instagram.com/\" style={{ color: \"#f4c10f\" }}>\n                <i className=\"fab fa-instagram\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"col-md-4 col-sm-6\" style={{ color: \"#5a606b\" }}>\n          <h3>feel free to write us</h3>\n          <ul className=\"list-unstyled\">\n            <li>\n              <p>\n                <strong>\n                  <i className=\"fas fa-map-marker-alt\"></i> ourAddress:\n                </strong>{\" \"}\n                Hyderabad, Ts, India\n              </p>\n            </li>\n            <li>\n              <p>\n                <strong>\n                  <i className=\"fas fa-map-marker-alt\"></i> Phone:\n                </strong>{\" \"}\n                7386034737\n              </p>\n            </li>\n            <li>\n              <p>\n                <strong>\n                  <i className=\"fas fa-envelope\"></i> Email:\n                </strong>{\" \"}\n                chavankiran584@gmail.com\n              </p>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  fetchMovieDetail,\n  fetchMovieVideos,\n \n} from \"../../service\";\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\nimport { Modal } from \"react-bootstrap\";\nimport ReactPlayer from \"react-player\";\nimport ReactStars from \"react-rating-stars-component\";\n\n\nexport function MovieDetail({ match }) {\n  let params = match.params;\n  let genres = [];\n  const [isOpen, setIsOpen] = useState(false);\n  const [detail, setDetail] = useState([]);\n  const [video, setVideo] = useState([]);\n  \n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDetail(await fetchMovieDetail(params.id));\n      setVideo(await fetchMovieVideos(params.id));\n      \n    };\n\n    fetchAPI();\n  }, [params.id]);\n\n  genres = detail.genres;\n\n  const MoviePalyerModal = (props) => {\n    const youtubeUrl = \"https://www.youtube.com/watch?v=\";\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title\n            id=\"contained-modal-title-vcenter\"\n            style={{ color: \"#000000\", fontWeight: \"bolder\" }}\n          >\n            {detail.title}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body style={{ backgroundColor: \"#000000\" }}>\n          <ReactPlayer\n            className=\"container-fluid\"\n            url={youtubeUrl + video.key}\n            playing\n            width=\"100%\"\n          ></ReactPlayer>\n        </Modal.Body>\n      </Modal>\n    );\n  };\n\n  let genresList;\n  if (genres) {\n    genresList = genres.map((g, i) => {\n      return (\n        <li className=\"list-inline-item\" key={i}>\n          <button type=\"button\" className=\"btn btn-outline-info\">\n            {g.name}\n          </button>\n        </li>\n      );\n    });\n  }\n\n  \n  return (\n    <div className=\"container\">\n      <div className=\"row mt-2\">\n        <MoviePalyerModal\n          show={isOpen}\n          onHide={() => {\n            setIsOpen(false);\n          }}\n        ></MoviePalyerModal>\n        <div className=\"col text-center\" style={{ width: \"100%\" }}>\n          <img\n            className=\"img-fluid\"\n            src={`http://image.tmdb.org/t/p/original/${detail.backdrop_path}`}\n            alt={detail.title}\n          ></img>\n          <div className=\"carousel-center\">\n            <i\n              onClick={() => setIsOpen(true)}\n              className=\"far fa-play-circle\"\n              style={{ fontSize: 95, color: \"#f4c10f\", cursor: \"pointer\" }}\n            ></i>\n          </div>\n          <div\n            className=\"carousel-caption\"\n            style={{ textAlign: \"center\", fontSize: 35 }}\n          >\n            {detail.title}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>GENRE</p>\n        </div>\n      </div>\n\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <ul className=\"list-inline\">{genresList}</ul>\n        </div>\n      </div>\n\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <div className=\"text-center\">\n            <ReactStars\n              count={detail.vote_average}\n              size={20}\n              color1={\"#f4c10f\"}\n            ></ReactStars>\n          </div>\n          <div className=\"mt-3\">\n            <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>Trailer summary</p>\n            {detail.overview}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row mt-3\">\n        <div className=\"col-md-3\">\n          <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>RELEASE DATE</p>\n          <p style={{ color: \"#f4c10f\" }}>{detail.release_date}</p>\n        </div>\n        <div className=\"col-md-3\">\n          <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>RUN TIME</p>\n          <p style={{ color: \"#f4c10f\" }}>{detail.runtime}</p>\n        </div>\n        <div className=\"col-md-3\">\n          <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>BUDGET</p>\n          <p style={{ color: \"#f4c10f\" }}>{detail.budget}</p>\n        </div>\n        <div className=\"col-md-3\">\n          <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>HOMEPAGE</p>\n          <p style={{ color: \"#f4c10f\" }}>{detail.homepage}</p>\n        </div>\n      </div>\n\n      <hr className=\"mt-5\" style={{ borderTop: \"1px solid #5a606b\" }}></hr>\n\n      <div className=\"row mt-3 mb-5\">\n        <div className=\"col-md-8 col-sm-6\" style={{ color: \"#5a606b\" }}>\n          <h3>Contact us </h3>\n          <p>\n           This is our movie portal where you can stream your favourite movie tarilers tv shows based on your favourite category.\n          </p>\n          <p>\n          our social networks\n          </p>\n          <ul className=\"list-inline\">\n            <li className=\"list-inline-item\">\n              <a href=\"/\" style={{ color: \"#f4c10f\" }}>\n                <i className=\"fab fa-facebook\"></i>\n              </a>\n            </li>\n            <li className=\"list-inline-item\">\n              <a href=\"/\" style={{ color: \"#f4c10f\" }}>\n                <i className=\"fab fa-youtube\"></i>\n              </a>\n            </li>\n            <li className=\"list-inline-item\">\n              <a href=\"/\" style={{ color: \"#f4c10f\" }}>\n                <i className=\"fab fa-twitter\"></i>\n              </a>\n            </li>\n            <li className=\"list-inline-item\">\n              <a href=\"/\" style={{ color: \"#f4c10f\" }}>\n                <i className=\"fab fa-instagram\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"col-md-4 col-sm-6\" style={{ color: \"#5a606b\" }}>\n          <h3>feel free to write us</h3>\n          <ul className=\"list-unstyled\">\n            <li>\n              <p>\n                <strong>\n                  <i className=\"fas fa-map-marker-alt\"></i> ourAddress:\n                </strong>{\" \"}\n                Hyderabad, Ts, India\n              </p>\n            </li>\n            <li>\n              <p>\n                <strong>\n                  <i className=\"fas fa-map-marker-alt\"></i> Phone:\n                </strong>{\" \"}\n                7386034737\n              </p>\n            </li>\n            <li>\n              <p>\n                <strong>\n                  <i className=\"fas fa-envelope\"></i> Email:\n                </strong>{\" \"}\n                chavankiran584@gmail.com\n              </p>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Home } from \"./components/home/Home\";\nimport { MovieDetail } from \"./components/moviedetail/MovieDetail\";\n\nexport function App() {\n  return (\n    <main>\n      \n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/movie/:id\" component={MovieDetail} />\n      </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}